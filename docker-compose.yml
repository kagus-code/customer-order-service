version: '3'
services:
  customer-order-service:
    restart: always
    build: ./
    env_file:
      - ./.env
    command: ./entrypoint.sh
    volumes:
      - crm-static:/customer-order-service/staticfiles
    ports:
      - 3016:3016
    depends_on:
      - customerorder-db
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import socket; s=socket.socket(); s.settimeout(1); s.connect((\"localhost\", 3016)); s.close()' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  customerorder-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: customerorder
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - crmdb:/var/lib/postgresql/data
    ports:
      - "5438:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5 

  crmcelery:
    restart: always
    build:
      context: .
    command: celery -A crm worker -l info
    env_file:
      - ./.env
    depends_on:
      - customer-order-service
      - crmrabbitmq
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery worker' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  crmrabbitmq:
    restart: always
    image: rabbitmq:latest
    env_file:
      - ./.env
    environment:
      RABBITMQ_DEFAULT_USER: ${DB_USER}
      RABBITMQ_DEFAULT_PASS: ${DB_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "5678:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  crmdb:
  crm-static:
